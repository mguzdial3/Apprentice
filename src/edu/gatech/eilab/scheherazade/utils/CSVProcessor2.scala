package edu.gatech.eilab.scheherazade.utils

import java.io._
import collection.mutable.ArrayBuffer

/**
 * Now: The pure function is to read a CSV file into a two dimensional array
 *
 */
object CSVProcessor2 {

  def readCSV(file: File): Array[Array[String]] = {
    readCSV(file.getAbsolutePath())
  }

  def readCSV(filename: String): Array[Array[String]] = {
    val text = scala.io.Source.fromFile(filename)(io.Codec("ASCII")).mkString

    val lines = text.split("\n")
    val buffer = ArrayBuffer[Array[String]]()

    lines foreach {
      l =>
        //println("line = " + l)
        //val line = l.trim
        val line = l.toCharArray()
        var idx = 0
        var lineBuffer = ArrayBuffer[String]()
        var builder = new StringBuilder()
        while (idx < line.length) {

          if (line(idx) == '"') { // inside a quote
            var closingQuoteFound = false
            idx += 1
            while (!closingQuoteFound) // direct go to the next closing quote
            {
              //println(line(idx))
              if (idx == line.length) {
                closingQuoteFound = true
              } else if (line(idx) == '"') {
                if (idx + 1 == line.length || line(idx + 1) != '"') {
                  closingQuoteFound = true                  
                } else // idx+1 is valid AND line(idx + 1) == '"'
                {
                  builder append '"'
                  idx += 1
                }

              } else {
                builder append line(idx)                
              }
              idx += 1
            }
          } else {
            if (line(idx) == ',') {
              lineBuffer += builder.toString
              //println(builder.toString)
              builder = new StringBuilder()
              
              //println("collected = " + lineBuffer.size)
            } else {
              builder append line(idx)
              //println(builder.toString)
            }
            idx += 1
          }

          //lineBuffer += entry.toString.replaceAll("\"\"", "\"")
        }
        //println("processed line = " + lineBuffer.mkString(", "))
        buffer += lineBuffer.toArray
    }

    buffer.toArray

  }

  /**
   * * The main method converts the csv file generated by Mechanical Turk to our format
   *  the csv file should contain only the stories, not the metadata
   *
   */
  def main(args: Array[String]) {
    val array = readCSV("""C:\Users\Albert\Desktop\Proposal\summary.csv""")
    val writer = new PrintWriter(new BufferedOutputStream(new FileOutputStream("""C:\Users\Albert\Desktop\Proposal\stories.txt""")))
    for (story <- array) {
      for (line <- story) {
        val k = line.trim
        if (k != "") {
          writer.println(k)
        }
      }
      writer.println("###")
    }

    writer.close()
  }
}